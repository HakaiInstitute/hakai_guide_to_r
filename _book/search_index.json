[
["index.html", "Hakai Institute R Data-Analyst Guide Preface", " Hakai Institute R Data-Analyst Guide Brett Johnson 2017-05-22 Preface The Hakai Institute is a research organization based on the coast of British Columbia, Canada. See the Hakai Institute Website for more information. "],
["guide-for-the-new-r-analysis-developer.html", "2 Guide for the New R Analysis Developer 2.1 Install and Set up R and R Studio 2.2 Version Control with Git and GitHUB 2.3 Install and set-up Git", " 2 Guide for the New R Analysis Developer 2.1 Install and Set up R and R Studio R is the statistical programming language that R Studio understands. I think of R Studio as being the front-end user interface to the coding language R which is running in the background. For this all to work you you need to download two things to start; R and R Studio. Watch my Youtube Video on how to install R and R Studio Go to https://cran.r-project.org/ and follow the link to the download for your operating system. Go to https://www.rstudio.com/products/rstudio/download/ to download R studio 2.1.1 Familiarize yourself with R and R-Studio Now that you have downloaded the tools you need, lets get familiar first with R-Studio and then the R programming language. 2.1.2 R Studio Watch this R-Studio Tutorial for a nice introduction to the software. 2.1.3 R Programming Language To begin getting familiar with the R programming language lets install your first package in R-Studio. You can think of packages as extensions to R. Because R is open-source, people often write packages to make different functions, features, or analyses possible. Your first package will be swirl(). swirl() is a package for learning (and teaching) statistics and R simultaneously and interactively. TODO: MAKE NEW SWIRL VIDEO SAYING ONLY DO CHAPTER 1 AND 2 Watch this youtube video to install your first package and start learning R with the swirl() package. Complete chapter 1 and 2 in swirl() only. 2.1.4 R Studio Projects Workflow Watch R-Studio tutorial: Projects and R Studio 2.1.5 Making Plots Start making some awesome graphs by working through section 3.1 to 3.5 in Hadley Wickham’s R for Data Science Book 2.2 Version Control with Git and GitHUB The reason this document is hosted on GitHUB is that we’ll be working with GitHUB throughout this guide and throughout your own analysis development. Git is integral for tracking the evolution of a set of files. Basically GitHUB and R is analagous to ‘track changes’ and Microsoft Word. If you’re interested in learning why version control is important, I encourage you to skimread Chapter 1; ‘Why Git? Why GitHUB’ from Jenny Bryans Book. I reccomend referring back to this book whenever you have a question about using git and GitHUB with R-Studio. 2.2.1 Setup a GitHUB Account First, you’re going to want to sign up for a GitHUB account 2.2.2 ‘Issues’ Now that you have a GitHUB account, you should introduce yourself and let me know you’re going to work through this material. To do that go to the issues tab in this repository (repo) and ‘create a new issue’ and type a message to introduce yourself. Using issues is also a great way to ask questions about course material. 2.2.3 Fork This Repo Next, you should fork this repo so that you can access this document from your GitHUB profile, edit it, and make a ‘pull request’ to suggest edits to me. This serves two purposes: 1) the quality of this guide will be improved if you take time to edit chapters and contribute your insights on what didn’t work for you; and 2) forking repos and making pull-requests is training you for the workflow you will use when contributing to colleagues’ analyses in the very near future. To successfully fork this repo and suggest edits simply go to my repo here and click on the name of this chapter: ‘new_analysts.Rmd’, once it’s open click on the pencil icon to suggest edits. Editing automcatically forks the repo and makes a copy in your own list of repos. Now you can make all the edits you’d like and when your happy you can click on ‘pull request’ to send the updates back to me so I can review them and decide if I should accept your edits and merge them. If you aren’t successfull forking my repo, read Chapter 24 of Jenny Brians Book; ‘Fork a Repo’. 2.2.4 Markdown Syntax You’ll notice that this file is a ‘.Rmd’ file which stands for R Markdown. Read this if you’re interested in markdown syntax, otherwise come back to it later. Also, try this tutorial on how to write using markdown 2.2.5 GitHUB Checklist Complete these items before moving on to the next section. Create a GitHUB account Create a new ‘issue’ to introduce yourself or ask a question Fork this repository Make a pull request to suggest an edit or update to this guide 2.3 Install and set-up Git Next you’re going to install Git. Git tracks the changes you make in R-Studio locally and upon your request, pushes changes to your remote repository at GitHUB. Similar to the relationship between R and R-Studio, Git is the local version control system running in the back ground on your computer while GitHUB is the remote user interface for saving, tracking, and sharing updated versions of your analyses that is hosted on a remote server. Installing Git locally and getting Git to communicate to your remote GitHUB website account, and then getting them to talk with RStudio takes a number of steps to complete…This next part can be painful to work through, but it is 100 % neccesary and well worth it in the long-run. Install Git and GitHUB and get them talking to R-Studio using Jenny Bryan’s Guide, start at chapter 7 and work to the end of chapter 13. Congratulations you now have setup the three main tools in the R Analyst toolbox: R, R Studio and GitHUB and learned the basics of each component. Now to put this all in context, and learn how to use Git, GitHUB and R-Studio I reccomend watching the R-Studio Essentials tutorial; GitHUB and R-Studio. Now you’ve seen almost all the components of a good workflow, in the next chapter you can put all these things together and work through an example of a Data Analysis using a presecribed, modern approach. "]
]
